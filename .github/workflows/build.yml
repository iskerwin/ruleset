name: Generate Index

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Generate Index
        run: |
          cat > generate-index.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          function shouldSkipPath(p) {
            return p.includes('.git') || 
                   p.includes('.github') || 
                   p.includes('node_modules') ||
                   p === 'generate-index.js';
          }

          function getAllFiles(dir) {
            let results = [];
            
            const list = fs.readdirSync(dir);
            
            list.forEach(file => {
              const fullPath = path.join(dir, file);
              if (shouldSkipPath(fullPath)) return;
              
              const stat = fs.statSync(fullPath);
              if (stat && stat.isDirectory()) {
                results = results.concat(getAllFiles(fullPath));
              } else {
                results.push(fullPath);
              }
            });
            
            return results.sort();
          }

          function formatSize(bytes) {
            const units = ['B', 'KB', 'MB', 'GB'];
            let size = bytes;
            let unitIndex = 0;
            
            while (size >= 1024 && unitIndex < units.length - 1) {
              size /= 1024;
              unitIndex++;
            }
            
            return `${size.toFixed(2)} ${units[unitIndex]}`;
          }

          function formatDate(date) {
            return date.toISOString().split('T')[0];
          }

          function generateHTML(files) {
            const fileLinks = files.map(file => {
              const urlPath = file.split(path.sep).join('/');
              const stats = fs.statSync(file);
              const size = formatSize(stats.size);
              const mtime = formatDate(stats.mtime);
              
              return `
                <tr>
                  <td class="name"><a href="/${urlPath}">${urlPath}</a></td>
                  <td class="size">${size}</td>
                  <td class="date">${mtime}</td>
                </tr>`;
            }).join('\n');

            return `
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>Directory Index</title>
              <style>
                  :root {
                      --text-primary: #24292f;
                      --text-secondary: #57606a;
                      --border-color: #d0d7de;
                      --hover-bg: #f6f8fa;
                      --link-color: #0969da;
                  }
                  
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                      line-height: 1.5;
                      margin: 0;
                      padding: 20px;
                      color: var(--text-primary);
                  }
                  
                  .container {
                      max-width: 1200px;
                      margin: 0 auto;
                  }
                  
                  h1 {
                      font-size: 24px;
                      font-weight: 600;
                      margin-bottom: 16px;
                  }
                  
                  table {
                      width: 100%;
                      border-collapse: collapse;
                      margin-top: 16px;
                  }
                  
                  th {
                      text-align: left;
                      padding: 8px 16px;
                      font-weight: 600;
                      border-bottom: 1px solid var(--border-color);
                      color: var(--text-secondary);
                  }
                  
                  td {
                      padding: 8px 16px;
                      border-bottom: 1px solid var(--border-color);
                  }
                  
                  tr:hover {
                      background-color: var(--hover-bg);
                  }
                  
                  .name {
                      width: 60%;
                  }
                  
                  .size {
                      width: 20%;
                      color: var(--text-secondary);
                  }
                  
                  .date {
                      width: 20%;
                      color: var(--text-secondary);
                  }
                  
                  a {
                      color: var(--link-color);
                      text-decoration: none;
                  }
                  
                  a:hover {
                      text-decoration: underline;
                  }
                  
                  .footer {
                      margin-top: 32px;
                      padding-top: 16px;
                      border-top: 1px solid var(--border-color);
                      color: var(--text-secondary);
                      font-size: 12px;
                      text-align: center;
                  }
                  
                  @media (max-width: 768px) {
                      .date {
                          display: none;
                      }
                      .name {
                          width: 70%;
                      }
                      .size {
                          width: 30%;
                      }
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Directory Index</h1>
                  <table>
                      <thead>
                          <tr>
                              <th class="name">Name</th>
                              <th class="size">Size</th>
                              <th class="date">Last Modified</th>
                          </tr>
                      </thead>
                      <tbody>
                          ${fileLinks}
                      </tbody>
                  </table>
                  <div class="footer">
                      Generated on ${new Date().toUTCString()}
                  </div>
              </div>
          </body>
          </html>`;
          }

          const files = getAllFiles('.');
          const html = generateHTML(files);
          fs.writeFileSync('index.html', html);
          EOF

          node generate-index.js
          
      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add index.html
          git commit -m "Update directory index" || exit 0
          git push