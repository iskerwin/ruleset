name: Generate Index

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Generate Index
        run: |
          cat > generate-index.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          function shouldSkipPath(p) {
            return p.includes('.git') || 
                  p.includes('.github') || 
                  p.includes('favicon') || 
                  p.includes('index.html') || 
                  p.includes('.file_hashes.json') || 
                  p.includes('README.md') || 
                  p.includes('node_modules') ||
                  p === 'generate-index.js';
          }

          function getFileTree(dir, baseDir = '') {
            let results = [];
            const list = fs.readdirSync(dir);
            
            // 首先处理目录
            list.forEach(file => {
              const fullPath = path.join(dir, file);
              const relativePath = path.join(baseDir, file);
              
              if (shouldSkipPath(fullPath)) return;
              
              const stat = fs.statSync(fullPath);
              if (stat && stat.isDirectory()) {
                results.push({
                  name: file,
                  path: relativePath,
                  type: 'directory',
                  children: getFileTree(fullPath, relativePath)
                });
              }
            });
            
            // 然后处理文件
            list.forEach(file => {
              const fullPath = path.join(dir, file);
              const relativePath = path.join(baseDir, file);
              
              if (shouldSkipPath(fullPath)) return;
              
              const stat = fs.statSync(fullPath);
              if (stat && !stat.isDirectory()) {
                results.push({
                  name: file,
                  path: relativePath,
                  type: 'file'
                });
              }
            });
            
            return results.sort((a, b) => {
              // 目录优先
              if (a.type !== b.type) {
                return a.type === 'directory' ? -1 : 1;
              }
              // 然后按名称排序
              return a.name.localeCompare(b.name);
            });
          }

          function generateTreeHTML(items, level = 0) {
            return items.map(item => {
              const indent = level * 20; // 减小缩进距离
              const isDirectory = item.type === 'directory';
              const icon = isDirectory ? 
                '<svg class="icon" viewBox="0 0 16 16"><path fill="currentColor" d="M1.75 2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25H7.5c-.55 0-1.07-.26-1.4-.7l-.9-1.2a.25.25 0 00-.2-.1H1.75z"/></svg>' : 
                '<svg class="icon" viewBox="0 0 16 16"><path fill="currentColor" d="M3.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25V6H9.75A1.75 1.75 0 018 4.25V1.5H3.75zm5.75.56v2.19c0 .138.112.25.25.25h2.19L9.5 2.06zM2 1.75C2 .784 2.784 0 3.75 0h5.086c.464 0 .909.184 1.237.513l3.414 3.414c.329.328.513.773.513 1.237v8.086A1.75 1.75 0 0112.25 15h-8.5A1.75 1.75 0 012 13.25V1.75z"/></svg>';

              const verticalLine = level > 0 ? `<div class="vertical-line" style="left: ${indent - 10}px"></div>` : '';

              let html = `
                <tr>
                  <td class="name" style="padding-left: ${indent}px">
                    ${verticalLine}
                    ${icon}
                    <a href="/${item.path}" class="${isDirectory ? 'directory' : 'file'}">${item.name}</a>
                  </td>
                </tr>`;

              if (isDirectory && item.children) {
                html += generateTreeHTML(item.children, level + 1);
              }

              return html;
            }).join('');
          }

          function generateHTML(tree) {
            return `
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>Ruleset for Surge</title>
              <link href="https://ruleset.kerwin.us.kg/favicon/favicon.ico" rel="icon" type="image/ico">
              <link href="https://ruleset.kerwin.us.kg/favicon/apple-touch-icon.png" rel="apple-touch-icon" sizes="180x180">
              <link href="https://ruleset.kerwin.us.kg/favicon/android-chrome-192x192.png" rel="icon" type="image/png" sizes="192x192">
              <link href="https://ruleset.kerwin.us.kg/favicon/favicon-32x32.png" rel="icon" type="image/png" sizes="32x32">
              <link href="https://ruleset.kerwin.us.kg/favicon/favicon-16x16.png" rel="icon" type="image/png" sizes="16x16">
              <meta name="description" content="Surge 规则组">
              <style>
                  :root {
                      --text-primary: #24292f;
                      --text-secondary: #57606a;
                      --link-color: #57606a;
                      --hover-color: #0969da;
                  }
                  
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                      line-height: 1.5;
                      margin: 0;
                      padding: 20px;
                      color: var(--text-primary);
                      background: #fff;
                  }
                  
                  .container {
                      max-width: 1000px;
                      margin: 0 auto;
                  }
                  
                  h1 {
                      font-size: 24px;
                      font-weight: 600;
                      margin-bottom: 16px;
                      color: var(--text-primary);
                  }
                  
                  table {
                      width: 100%;
                      border-collapse: collapse;
                  }
                  
                  td {
                      padding: 4px 0;
                      position: relative;
                  }
                  
                  .name {
                      display: flex;
                      align-items: center;
                      position: relative;
                  }
                  
                  .icon {
                      width: 16px;
                      height: 16px;
                      margin-right: 4px;
                      color: var(--text-secondary);
                      flex-shrink: 0;
                  }
                  
                  .vertical-line {
                      position: absolute;
                      width: 2px;
                      height: 100%;
                      background: #eaecef;
                      top: 0;
                  }
                  
                  a {
                      color: var(--link-color);
                      text-decoration: none;
                      font-size: 14px;
                  }
                  
                  a:hover {
                      color: var(--hover-color);
                      text-decoration: underline;
                  }
                  
                  .directory {
                      font-weight: 600;
                  }
                  
                  .file {
                      font-weight: normal;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Ruleset for Surge</h1>
                  <table>
                      <tbody>
                          ${generateTreeHTML(tree)}
                      </tbody>
                  </table>
              </div>
          </body>
          </html>`;
          }

          const tree = getFileTree('.');
          const html = generateHTML(tree);
          fs.writeFileSync('index.html', html);
          EOF

          node generate-index.js
          
      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add index.html
          git commit -m "Update directory index" || exit 0
          git push